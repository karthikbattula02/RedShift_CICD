name: Check Webhook and Redeliver

on:
  workflow_dispatch:  # Run manually, you can change to push if needed

jobs:
  check-webhook:
    runs-on: ubuntu-latest
    steps:
      - name: Check webhook deliveries
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WEBHOOK_PAT }}
          script: |
            const repo = context.repo.repo;
            const owner = context.repo.owner;

            // Get all hooks
            const hooks = await github.request("GET /repos/{owner}/{repo}/hooks", {
              owner,
              repo
            });

            for (const hook of hooks.data) {
              console.log(`üîç Checking Hook: ${hook.id}`);

              // Get last deliveries
              const deliveries = await github.request(
                "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
                { owner, repo, hook_id: hook.id }
              );

              for (const delivery of deliveries.data) {
                console.log(`‚û°Ô∏è Delivery ID: ${delivery.id}, Status: ${delivery.status}, Code: ${delivery.response?.status || "N/A"}`);

                // Check for timeout or non-200 status
                if (delivery.status === "timed_out" || (delivery.response && delivery.response.status !== 200)) {
                  console.log(`‚ö†Ô∏è Found failed delivery ${delivery.id}, redelivering...`);

                  try {
                    const redeliverResp = await github.request(
                      "POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
                      {
                        owner,
                        repo,
                        hook_id: hook.id,
                        delivery_id: delivery.id
                      }
                    );

                    if (redeliverResp.status === 202) {
                      console.log(`‚úÖ [MAIL CONTEXT] Webhook delivery ${delivery.id} re-delivered successfully!`);
                    } else {
                      console.log(`‚ùå [MAIL CONTEXT] Webhook delivery ${delivery.id} re-delivery failed with status ${redeliverResp.status}`);
                    }
                  } catch (err) {
                    console.log(`‚ùå [MAIL CONTEXT] Webhook delivery ${delivery.id} re-delivery failed. Error: ${err.message}`);
                  }
                }
              }
            }
