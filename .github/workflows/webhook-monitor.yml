name: Monitor Webhooks

on:
  push:
    branches: [main]

jobs:
  check-webhook:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest commit info
        id: commit_info
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "msg=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Check webhook delivery
        id: webhook_status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WEBHOOK_PAT2 }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Fetch repo webhooks
            const hooks = await github.request("GET /repos/{owner}/{repo}/hooks", { owner, repo });
            if (!hooks.data.length) {
              core.setFailed("❌ No webhooks found in this repo");
              return;
            }

            const hookId = hooks.data[0].id;

            // Get deliveries for the latest webhook
            const deliveries = await github.request("GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries", {
              owner, repo, hook_id: hookId
            });

            if (!deliveries.data.length) {
              core.setFailed("❌ No deliveries found for webhook " + hookId);
              return;
            }

            const latest = deliveries.data[0];

            // Log initial delivery status
            console.log("🔔 Webhook Delivery Check:");
            console.log(`Repository: ${owner}/${repo}`);
            console.log(`Commit SHA: ${process.env.sha}`);
            console.log(`Commit Message: ${process.env.msg}`);
            console.log(`Webhook ID: ${hookId}`);
            console.log(`Delivery ID: ${latest.id}`);
            console.log(`Status: ${latest.status}`);
            console.log(`Response Code: ${latest.response?.status_code || "N/A"}`);

            // If not ok → redeliver and re-check
            if (latest.status !== "ok") {
              console.log("⚠️ Webhook delivery failed, attempting redelivery...");

              // Redeliver
              await github.request("POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts", {
                owner, repo, hook_id: hookId, delivery_id: latest.id
              });

              // Wait 5 seconds before re-checking
              await new Promise(r => setTimeout(r, 5000));

              // Fetch deliveries again
              const { data: redeliveries } = await github.request(
                "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
                { owner, repo, hook_id: hookId }
              );

              const retried = redeliveries[0];
              console.log("🔄 After Redelivery Check:");
              console.log(`Delivery ID: ${retried.id}`);
              console.log(`Status: ${retried.status}`);
              console.log(`Response Code: ${retried.response?.status_code || "N/A"}`);

              if (retried.status !== "ok") {
                core.setFailed("❌ Webhook still failing after redelivery.");
              }
            } else {
              console.log("✅ Webhook delivery OK, no redelivery needed.");
            }
