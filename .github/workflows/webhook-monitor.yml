name: Monitor Webhooks

on:
  push:
    branches: [main]

jobs:
  check-webhook:
    runs-on: ubuntu-latest
    outputs:
      final_status: ${{ steps.check.outputs.final_status }}
      send_email: ${{ steps.check.outputs.send_email }}
    steps:
      - name: Check and Redeliver Webhook if Needed
        id: check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WEBHOOK_PAT2 }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const hookId = 558736907;

            // Fetch latest delivery
            const { data: deliveries } = await github.request(
              "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
              { owner, repo, hook_id: hookId }
            );

            const latest = deliveries[0];
            console.log("Latest delivery:", latest);

            let finalStatus = latest.status;
            let needEmail = false;

            // Retry only if delivery failed
            if (latest.status !== "success") {
              console.log(`Webhook delivery ${latest.id} failed (${latest.status}). Retrying...`);
              needEmail = true;

              await github.request(
                "POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
                { owner, repo, hook_id: hookId, delivery_id: latest.id }
              );

              // Wait a few seconds for redelivery to complete
              await new Promise(r => setTimeout(r, 5000));

              const { data: redeliveries } = await github.request(
                "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
                { owner, repo, hook_id: hookId }
              );

              const newLatest = redeliveries[0];
              console.log("After redelivery:", newLatest);
              finalStatus = newLatest.status;
            } else {
              console.log("Webhook delivery successful. No redelivery needed.");
            }

            core.setOutput("final_status", finalStatus);
            core.setOutput("send_email", needEmail);

  send-email:
    if: ${{ needs.check-webhook.outputs.send_email == 'true' }}
    needs: check-webhook
    runs-on: ubuntu-latest
    steps:
      - name: Send Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "GitHub Webhook Status Notification"
          body: |
            Final Webhook Status: ${{ needs.check-webhook.outputs.final_status }}

            Repository: ${{ github.repository }}
            Commit SHA: ${{ github.sha }}
            Branch: ${{ github.ref }}

          to: photoskarthik2@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
          secure: true
