name: Monitor Webhooks

on:
  push:

jobs:
  check-webhook:
    runs-on: ubuntu-latest
    steps:
      - name: Check webhook delivery for this commit
        id: check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WEBHOOK_PAT2 }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const commitSha = context.sha;
            const commitMsg = context.payload.head_commit.message;

            console.log(`🔎 Checking webhook delivery for commit: ${commitSha}`);
            console.log(`💬 Commit message: ${commitMsg}`);

            // Get all webhook deliveries
            const hooks = await github.request("GET /repos/{owner}/{repo}/hooks", {
              owner, repo
            });

            if (!hooks.data.length) {
              throw new Error("No webhooks found in this repo!");
            }

            const hookId = hooks.data[0].id;

            // Get deliveries for that hook
            const deliveries = await github.request("GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries", {
              owner, repo, hook_id: hookId
            });

            // Match by commit SHA
            let delivery = deliveries.data.find(d => 
              d.request && d.request.payload && d.request.payload.after === commitSha
            );

            if (!delivery) {
              throw new Error(`No webhook delivery found for commit ${commitSha}`);
            }

            console.log(`📦 Webhook status: ${delivery.status}`);
            if (delivery.status !== "ok") {
              console.log("⚠️ Webhook failed, attempting redelivery...");

              // Redeliver
              await github.request("POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts", {
                owner, repo, hook_id: hookId, delivery_id: delivery.id
              });

              // Wait before checking again
              await new Promise(r => setTimeout(r, 5000));

              const deliveriesRetry = await github.request("GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries", {
                owner, repo, hook_id: hookId
              });

              delivery = deliveriesRetry.data.find(d => 
                d.request && d.request.payload && d.request.payload.after === commitSha
              );

              console.log(`🔁 After retry, webhook status: ${delivery.status}`);

              if (delivery.status !== "ok") {
                core.setFailed(`❌ Webhook failed even after retry for commit ${commitSha}`);
              }
            } else {
              console.log("✅ Webhook succeeded");
            }

      - name: Send mail on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "❌ Webhook failed for commit ${{ github.sha }}"
          to: photoskarthik2@gmail.com
          from: GitHub Actions <${{ secrets.MAIL_USERNAME }}>
          body: |
            Webhook failed even after retry.

            📌 Repository: ${{ github.repository }}
            🔗 Commit SHA: ${{ github.sha }}
            💬 Commit Message: ${{ github.event.head_commit.message }}
