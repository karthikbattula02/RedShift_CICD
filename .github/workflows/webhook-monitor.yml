name: Monitor Webhooks

on:
  push:
    branches: [main]

jobs:
  check-webhook:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest commit info
        id: commit_info
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "msg=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Check webhook delivery
        id: webhook_status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WEBHOOK_PAT2 }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Fetch repo webhooks
            const hooks = await github.request("GET /repos/{owner}/{repo}/hooks", { owner, repo });
            if (!hooks.data.length) {
              core.setFailed("❌ No webhooks found in this repo");
              return;
            }

            const hookId = hooks.data[0].id;

            // Get deliveries for the latest webhook
            const deliveries = await github.request("GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries", {
              owner, repo, hook_id: hookId
            });

            if (!deliveries.data.length) {
              core.setFailed("❌ No deliveries found for webhook " + hookId);
              return;
            }

            const latest = deliveries.data[0];

            // --- First Check ---
            if (latest.status === "ok") {
              console.log("✅ Webhook delivered successfully (first attempt).");
              console.log(`Repository: ${owner}/${repo}`);
              console.log(`Commit SHA: ${process.env.sha}`);
              console.log(`Commit Message: ${process.env.msg}`);
              console.log(`Webhook ID: ${hookId}`);
              console.log(`Delivery ID: ${latest.id}`);
              console.log(`Response Code: ${latest.response?.status_code || "N/A"}`);
              return;
            }

            // --- Redeliver if failed ---
            console.log("⚠️ First attempt failed, retrying delivery...");

            await github.request(
              "POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
              { owner, repo, hook_id: hookId, delivery_id: latest.id }
            );

            // Wait a few seconds before checking again
            await new Promise(resolve => setTimeout(resolve, 5000));

            const redeliveries = await github.request("GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries", {
              owner, repo, hook_id: hookId
            });

            const retried = redeliveries.data.find(d => d.id === latest.id);

            if (retried && retried.status === "ok") {
              console.log("✅ Webhook delivered successfully after redelivery.");
              console.log(`Repository: ${owner}/${repo}`);
              console.log(`Commit SHA: ${process.env.sha}`);
              console.log(`Commit Message: ${process.env.msg}`);
              console.log(`Webhook ID: ${hookId}`);
              console.log(`Delivery ID: ${retried.id}`);
              console.log(`Response Code: ${retried.response?.status_code || "N/A"}`);
            } else {
              console.log("❌ Webhook failed again after redelivery.");
              console.log(`Repository: ${owner}/${repo}`);
              console.log(`Commit SHA: ${process.env.sha}`);
              console.log(`Commit Message: ${process.env.msg}`);
              console.log(`Webhook ID: ${hookId}`);
              console.log(`Delivery ID: ${latest.id}`);
              console.log(`Status: ${retried?.status || "unknown"}`);
              console.log(`Response Code: ${retried?.response?.status_code || "N/A"}`);
            }
